name: CI-api

on:
  pull_request:
    paths:
      - 'api/**'
      - '.github/workflows/ci-api.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # github appトークンを作成する
      - name: Create github app token
        id: create
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}
          token: ${{ steps.create.outputs.token }}
          persist-credentials: true

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
          working-directory: ./api

      - name: Lint code for consistent style
        run: bin/rubocop -f github -a
        working-directory: ./api

      # 変更があれば、コミット＆プッシュする
      - name: Commit formatted files
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Action
          author_email: action@github.com
          message: 'chore: auto format code'
          push: true

      # breakmanでコードの自動修正を実行

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager -a
        working-directory: ./api

      # 変更があれば、コミット＆プッシュする
      - name: Commit lint fixed files
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Action
          author_email: action@github.com
          message: 'chore: auto format code'
          push: true

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
          working-directory: ./api

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare test
        working-directory: ./api
